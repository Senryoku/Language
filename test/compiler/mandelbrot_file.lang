import "std/String"
import "std/File"

function main() {
	const sx = 1920;
	const sy = 1024;
	const max_pixel_value = 255;
	const max_iterations = 128;
	
	let str_builder : StringBuilder;
	// FIXME: Default values are not respected yet.
	str_builder.length = 0;
	str_builder.capacity = 0;
	let capacity : u64 = 20 + (sx + 1) * sy * (3 + 1);
	str_builder.reserve(capacity);
	
	str_builder.append("P2\n");
	str_builder.append(to_string(sx));
	str_builder.append('\n');
	str_builder.append(to_string(sy));
	str_builder.append('\n');
	str_builder.append(to_string(max_iterations + 1));
	str_builder.append('\n');
	
	for(let py = 0; py < sy; ++py) {
		const yz = -1.0 + (2.0 / sy) * py;
		for(let px = 0; px < sx; ++px) {
			const xz = -2.5 + (3.5 / sx) * px;
			let iterations : int = 0;
			// Bulb test
			const q = (xz - 1.0 / 4.0) * (xz - 1.0 / 4.0) + yz * yz;
			if(q * (q + (xz - 1.0 / 4.0)) <= 1.0 / 4.0 * yz * yz) {
				iterations = max_iterations;
			} else {
				let x : float = 0;
				let y : float = 0;
				while(x * x + y * y <= 2 * 2  && iterations < max_iterations) {
					const xtemp : float = x * x - y * y + xz;
					y = 2 * x * y + yz;
					x = xtemp;
					++iterations;
				}
			}
			const to_int : int = max_pixel_value * ((1.0 * iterations) / max_iterations);
			
			str_builder.append(to_string(to_int));
			str_builder.append(' ');
		}
		str_builder.append('\n');
	}
		
	let file : TextFile;
	file.open("./mandelbrot.ppm", "w");
	file.write(str_builder.ptr, str_builder.length);

	return 0;
}
