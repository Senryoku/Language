// PASS: sizeof\(Type128\)    = 16
// RET : 0

type StructType {
	let a: u8;
	let b: u16;
	let c: u32;
}

type Type128 {
	let a: u64;
	let b: i64;
}

function print_size_of_template<T>(val: T) {
    printf("sizeof(T)          = %llu\n", sizeof(T));
}

function main() {
    printf("sizeof(u8)         = %llu\n", sizeof(u8));
    printf("sizeof(u16)        = %llu\n", sizeof(u16));
    printf("sizeof(u32)        = %llu\n", sizeof(u32));
    printf("sizeof(u64)        = %llu\n", sizeof(u64));
    printf("sizeof(StructType) = %llu\n", sizeof(StructType));
    printf("sizeof(Type128)    = %llu\n", sizeof(Type128));
	
	print_size_of_template(0u8);
	print_size_of_template(0u16);
	print_size_of_template(0u32);
	print_size_of_template(0u64);
	let str : StructType;
	print_size_of_template(str);
	let val : Type128;
	print_size_of_template(val);
	
    return 0;
}
