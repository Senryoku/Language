type Socket {
	let fd: int = 0;
}

function create(this: Socket*) {
	.fd = __socket_create();
}

function connect(this: Socket*, addr: string, port: int) {
	__socket_connect(.fd, addr, port);
}

function send(this: Socket*, data: string) {
	__socket_send(.fd, data);
}

function recv(this: Socket*) : string {
	return __socket_recv(.fd);
}

function close(this: Socket*) {
	__socket_close(.fd);
}

function main() : int {
	__socket_init(); // How should we handle that?

	let socket : Socket;

	socket.create();

	printf("Got socket: %d\n", socket.fd);

	socket.connect("httpbin.org", 80);
	socket.send("GET /get HTTP/1.0\r\n\r\n");
	printf("Received: %s\n", socket.recv());

	socket.close();
	
	printf("Done!\n");

	return 0;
}
