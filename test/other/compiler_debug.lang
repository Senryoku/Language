extern function __open_file(path: char*, mode: char*) : int;
extern function __close_file(fd: int);

type File {
	let fd : int = 0;
}

function open(this: File*, path: string, mode: string) {
	.fd = __open_file(path, mode);
}

function close(this: File*) {
	if(.fd != 0) __close_file(.fd);
}

// Crashes for some reason
//function destructor(this: File*) {
//	.close();
//}

function main() : int {
	printf("Trying to open a file...\n");
	let file : File;
	printf("File Descriptor: %d.\n", file.fd);
	file.open("H:/Source/Lang/.gitignore", "r");
	printf("File Descriptor: %d.\n", file.fd);
	file.close();
	return 0;
}